// Generated by CoffeeScript 1.7.1
(function() {
  var bane, calcu, calculate, change_attr, dark, detectPortrait, env, envtxt, getCookie, hp, initialize, j11, menu, operator, opposite, output, pet, petnum, point, pop_widget, profession, sameside, select_attr, select_career, sp, spawnstar, star, target, tools, translate;

  j11 = jQuery.noConflict(true);

  j11.blockUI.defaults.css = {
    cursor: 'auto'
  };

  bane = {
    'metal': 'wood',
    'wood': 'earth',
    'earth': 'water',
    'water': 'fire',
    'fire': 'metal'
  };

  translate = {
    'metal': '金',
    'wood': '木',
    'earth': '土',
    'water': '水',
    'fire': '火'
  };

  calcu = j11('.calcu');

  select_career = j11('#select_career');

  select_attr = j11('#select_attr');

  point = j11('#point');

  menu = j11('#menu');

  opposite = function(child) {
    if (j11('#half_left').has(child).length) {
      return '#half_right';
    } else {
      return '#half_left';
    }
  };

  sameside = function(child) {
    if (j11('#half_left').has(child).length) {
      return '#half_left';
    } else {
      return '#half_right';
    }
  };

  target = null;

  pop_widget = function(wid) {
    return function(e) {
      target = j11(this);
      if (1000 < target.css('z-index')) {
        return j11.unblockUI();
      }
      target.css('z-index', 1011);
      wid.css('opacity', 0);
      return j11.blockUI({
        message: wid,
        onOverlayClick: j11.unblockUI,
        onBlock: function() {
          if (wid.hasClass('calcu')) {
            wid.removeClass('for-hp for-sp');
            output.text(target.text());
            if (target.hasClass('hp')) {
              wid.addClass('for-hp');
            } else if (target.hasClass('sp')) {
              wid.addClass('for-sp');
            }
          }
          if (target.hasClass('pop-mid')) {
            wid.removeClass('for-star for-env for-pet');
            if (target.hasClass('star')) {
              wid.addClass('for-star');
            } else if (target.hasClass('env')) {
              target = env;
              wid.addClass('for-env');
            } else if (target.hasClass('pet')) {
              wid.addClass('for-pet');
            }
            wid.parent().position({
              my: 'top',
              at: 'top+5%',
              of: j11('.blockOverlay')
            });
          } else if (wid.is(point)) {
            wid.height(target.outerHeight() + wid.children().outerHeight() * 2);
            wid.parent().position({
              of: target
            });
          } else {
            wid.parent().position({
              of: opposite(target)
            });
          }
          return wid.css('opacity', 1);
        },
        onUnblock: function() {
          target.css('z-index', 0);
          return target = null;
        }
      });
    };
  };

  hp = (j11('.hp')).click(pop_widget(calcu));

  sp = (j11('.sp')).click(pop_widget(calcu));

  profession = (j11('.profession')).click(pop_widget(select_career));

  pet = (j11('.pet')).click(pop_widget(select_attr));

  petnum = (j11('.pet-num')).click(pop_widget(point));

  dark = (j11('.dark')).click(pop_widget(point));

  star = (j11('.star')).click(pop_widget(select_attr));

  env = (j11('#env')).click(pop_widget(select_attr));

  envtxt = (j11('#envtxt')).click(pop_widget(select_attr));

  tools = (j11('#tools')).click(pop_widget(menu));

  change_attr = function(obj, attr) {
    return obj.removeClass('metal wood water fire earth').addClass(attr);
  };

  getCookie = function(name) {
    var _ref;
    return (_ref = document.cookie.match(name + '=\\w+')) != null ? _ref[0].split('=')[1] : void 0;
  };

  initialize = function() {
    var _ref;
    hp.text((_ref = getCookie('hp_point')) != null ? _ref : 250);
    sp.text('');
    profession.text('無職業');
    pet.children().attr({
      "class": ''
    });
    petnum.text('');
    dark.text('');
    star.children().attr({
      "class": ''
    });
    env.children().attr({
      "class": ''
    });
    change_attr(envtxt, '').text('無');
    return j11('.meteor .spawn').removeClass('spawn').children().fadeTo('slow', 0.5);
  };

  spawnstar = function(div, attr) {
    var op, opattr;
    if (!div.hasClass(attr)) {
      op = j11(opposite(div) + ' .star div');
      opattr = op.attr('class');
      if (bane[attr] === opattr) {
        op.attr({
          "class": ''
        });
      }
      if (attr !== opattr || !attr) {
        div.attr({
          "class": attr
        });
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  };

  output = j11('.output', calcu);

  operator = {
    '+': function(a, b) {
      return Number(a) + Number(b);
    },
    '-': function(a, b) {
      return a - b;
    },
    '*': function(a, b) {
      return a * b;
    },
    '/': function(a, b) {
      return Math.floor(a / b);
    },
    '**': function(a, b) {
      return Math.pow(a, b);
    }
  };

  calculate = function(s) {
    var m, _ref;
    m = (_ref = s.match(/\d+|[\+\*\/-]+/g)) != null ? _ref : [];
    if (m.length === 3) {
      return operator[m[1]](m[0], m[2]);
    } else if (s) {
      return Number(s);
    } else {
      return '';
    }
  };

  (j11('.num', calcu)).click(function(e) {
    return output.append(e.target.textContent);
  });

  (j11('.op', calcu)).click(function(e) {
    var result;
    result = calculate(output.text());
    if (!isNaN(result)) {
      return output.text(result + e.target.textContent);
    } else {
      return output.append(e.target.textContent);
    }
  });

  (j11('.enter', calcu)).click(function(e) {
    var result;
    result = calculate(output.text());
    output.text(result);
    if (!isNaN(result)) {
      target.text(result);
    }
    return j11.unblockUI();
  });

  (j11('.btn-danger', calcu)).click(function(e) {
    return output.text(target.text());
  });

  (j11('.btn-default', calcu)).click(function(e) {
    return output.text(output.text().slice(0, -1));
  });

  j11('.meteor > div').click(function() {
    var self;
    self = j11(this);
    if (self.hasClass('spawn')) {
      return self.removeClass('spawn').children().fadeTo('slow', 0.5);
    } else {
      if (spawnstar(j11(sameside(self) + ' .star div'), self.children().attr('class'))) {
        return self.addClass('spawn').children().fadeTo('slow', 1);
      }
    }
  });

  select_attr.find('.btn').click(function(e) {
    var attr, div, _ref;
    div = target.children();
    attr = (j11(e.target)).attr('data-attr');
    if (target.hasClass('star')) {
      spawnstar(div, attr);
    } else {
      div.attr({
        "class": attr
      });
    }
    if (target.hasClass('pet')) {
      if (attr) {
        return target.next().text(2);
      } else {
        return target.next().text('');
      }
    } else if (target.hasClass('env')) {
      return change_attr(envtxt, attr).text((_ref = translate[attr]) != null ? _ref : '無');
    }
  });

  select_career.find('a').click(function(e) {
    var self;
    e.preventDefault();
    self = j11(e.target);
    return target.text(self.text());
  });

  (j11('#point .add')).click(function() {
    var n;
    n = Number(target.text());
    if (!n) {
      return target.text(1);
    } else if (n < 8) {
      return target.text(n + 1);
    }
  });

  (j11('#point .cut')).click(function() {
    var n;
    n = Number(target.text());
    if (1 < n) {
      target.text(n - 1);
    } else {
      target.text('');
    }
    if (!target.text() && target.hasClass('pet-num')) {
      return target.prev().children().attr({
        "class": ''
      });
    }
  });

  (j11('#initi')).click(initialize);

  (j11('#save_setting')).click(function() {
    var v;
    v = (j11('#formhp')).val();
    if (!isNaN(Number(v))) {
      document.cookie = 'hp_point=' + v;
    }
    return (j11('#setwindow')).modal('hide');
  });

  (j11('#setwindow *')).bind('click mouseup mousedown keypress keydown keyup', function(e) {
    if (e.which !== 27 && !(j11(e.target)).hasClass('btn')) {
      return e.stopPropagation();
    }
  });

  tools.popover({
    content: 'Please turn to landscape mode!\n請將螢幕橫置瀏覽！'
  });

  detectPortrait = function() {
    if (innerWidth < innerHeight) {
      return tools.popover('show');
    } else {
      return tools.popover('hide');
    }
  };

  j11(window).resize(detectPortrait);

  detectPortrait();

}).call(this);
